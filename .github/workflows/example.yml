name: Usage example

on: [workflow_dispatch]

jobs:
    example:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
          - name: Test quality-report-aggregator
            id: test-quality-report-aggregator
            uses: ./
            with:
              tflint_report: '[{ "project": ".github", "report": { "issues": [], "errors": [] } }, { "project": ".", "report": { "issues": [], "errors": [] } }, { "project": "project_1", "report": { "issues": [{ "rule": { "name": "terraform_required_version", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_required_version.md" }, "message": "terraform \"required_version\" attribute is required", "range": { "filename": "", "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 } }, "callers": [] }], "errors": [] } }, { "project": "project_2", "report": { "issues": [{ "rule": { "name": "terraform_required_version", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_required_version.md" }, "message": "terraform \"required_version\" attribute is required", "range": { "filename": "", "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 } }, "callers": [] }, { "rule": { "name": "terraform_required_providers", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_required_providers.md" }, "message": "Missing version constraint for provider \"kubernetes\" in `required_providers`", "range": { "filename": "kubernetes.tf", "start": { "line": 3, "column": 18 }, "end": { "line": 5, "column": 6 } }, "callers": [] }, { "rule": { "name": "terraform_deprecated_index", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_deprecated_index.md" }, "message": "List items should be accessed using square brackets", "range": { "filename": "service-nginx.tf", "start": { "line": 9, "column": 45 }, "end": { "line": 9, "column": 47 } }, "callers": [] }, { "rule": { "name": "terraform_deprecated_index", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_deprecated_index.md" }, "message": "List items should be accessed using square brackets", "range": { "filename": "service-nginx.tf", "start": { "line": 9, "column": 56 }, "end": { "line": 9, "column": 58 } }, "callers": [] }], "errors": [] } }, { "project": "project_3", "report": { "issues": [{ "rule": { "name": "terraform_required_version", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_required_version.md" }, "message": "terraform \"required_version\" attribute is required", "range": { "filename": "", "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 } }, "callers": [] }, { "rule": { "name": "terraform_required_providers", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_required_providers.md" }, "message": "Missing version constraint for provider \"aws\" in `required_providers`", "range": { "filename": "main.tf", "start": { "line": 3, "column": 11 }, "end": { "line": 5, "column": 6 } }, "callers": [] }, { "rule": { "name": "terraform_required_providers", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_required_providers.md" }, "message": "Missing version constraint for provider \"random\" in `required_providers`", "range": { "filename": "main.tf", "start": { "line": 6, "column": 14 }, "end": { "line": 8, "column": 6 } }, "callers": [] }], "errors": [] } }, { "project": "project_4", "report": { "issues": [{ "rule": { "name": "terraform_required_version", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_required_version.md" }, "message": "terraform \"required_version\" attribute is required", "range": { "filename": "", "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 } }, "callers": [] }, { "rule": { "name": "terraform_required_providers", "severity": "warning", "link": "https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.4.0/docs/rules/terraform_required_providers.md" }, "message": "Missing version constraint for provider \"aws\" in `required_providers`", "range": { "filename": "setup.tf", "start": { "line": 59, "column": 1 }, "end": { "line": 59, "column": 35 } }, "callers": [] }], "errors": [] } }]'
              tfsec_report: '[{ "project": "project_1", "report": { "results": [] } }, { "project": "project_2", "report": { "results": [] } }, { "project": "project_3", "report": { "results": [{ "rule_id": "AVD-AWS-0099", "long_id": "aws-ec2-add-description-to-security-group", "rule_description": "Missing description for security group.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Descriptions provide context for the firewall rule reasons", "resolution": "Add descriptions for all security groups", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"], "description": "Security group explicitly uses the default description.", "severity": "LOW", "warning": false, "status": 0, "resource": "aws_security_group.web-sg", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_3/main.tf", "start_line": 38, "end_line": 46 } }, { "rule_id": "AVD-AWS-0124", "long_id": "aws-ec2-add-description-to-security-group-rule", "rule_description": "Missing description for security group rule.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Descriptions provide context for the firewall rule reasons", "resolution": "Add descriptions for all security groups rules", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"], "description": "Security group rule does not have a description.", "severity": "LOW", "warning": false, "status": 0, "resource": "aws_security_group.web-sg", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_3/main.tf", "start_line": 40, "end_line": 45 } }, { "rule_id": "AVD-AWS-0131", "long_id": "aws-ec2-enable-at-rest-encryption", "rule_description": "Instance with unencrypted block device.", "rule_provider": "aws", "rule_service": "ec2", "impact": "The block device could be compromised and read from", "resolution": "Turn on encryption for all block devices", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-at-rest-encryption/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"], "description": "Root block device is not encrypted.", "severity": "HIGH", "warning": false, "status": 0, "resource": "aws_instance.web", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_3/main.tf", "start_line": 26, "end_line": 36 } }, { "rule_id": "AVD-AWS-0028", "long_id": "aws-ec2-enforce-http-token-imds", "rule_description": "aws_instance should activate session tokens for Instance Metadata Service.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Instance metadata service can be interacted with freely", "resolution": "Enable HTTP token requirement for IMDS", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enforce-http-token-imds/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"], "description": "Instance does not require IMDS access to require a token", "severity": "HIGH", "warning": false, "status": 0, "resource": "aws_instance.web", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_3/main.tf", "start_line": 26, "end_line": 36 } }, { "rule_id": "AVD-AWS-0107", "long_id": "aws-ec2-no-public-ingress-sgr", "rule_description": "An ingress security group rule allows traffic from /0.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Your port exposed to the internet", "resolution": "Set a more restrictive cidr range", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"], "description": "Security group rule allows ingress from public internet.", "severity": "CRITICAL", "warning": false, "status": 0, "resource": "aws_security_group.web-sg", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_3/main.tf", "start_line": 44, "end_line": 44 } }] } }, { "project": "project_4", "report": { "results": [{ "rule_id": "AVD-AWS-0124", "long_id": "aws-ec2-add-description-to-security-group-rule", "rule_description": "Missing description for security group rule.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Descriptions provide context for the firewall rule reasons", "resolution": "Add descriptions for all security groups rules", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/add-description-to-security-group-rule/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"], "description": "Security group rule does not have a description.", "severity": "LOW", "warning": false, "status": 0, "resource": "aws_security_group.sg", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "start_line": 77, "end_line": 82 } }, { "rule_id": "AVD-AWS-0131", "long_id": "aws-ec2-enable-at-rest-encryption", "rule_description": "Instance with unencrypted block device.", "rule_provider": "aws", "rule_service": "ec2", "impact": "The block device could be compromised and read from", "resolution": "Turn on encryption for all block devices", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enable-at-rest-encryption/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"], "description": "Root block device is not encrypted.", "severity": "HIGH", "warning": false, "status": 0, "resource": "aws_instance.webserver", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf", "start_line": 1, "end_line": 24 } }, { "rule_id": "AVD-AWS-0028", "long_id": "aws-ec2-enforce-http-token-imds", "rule_description": "aws_instance should activate session tokens for Instance Metadata Service.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Instance metadata service can be interacted with freely", "resolution": "Enable HTTP token requirement for IMDS", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/enforce-http-token-imds/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"], "description": "Instance does not require IMDS access to require a token", "severity": "HIGH", "warning": false, "status": 0, "resource": "aws_instance.webserver", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf", "start_line": 1, "end_line": 24 } }, { "rule_id": "AVD-AWS-0107", "long_id": "aws-ec2-no-public-ingress-sgr", "rule_description": "An ingress security group rule allows traffic from /0.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Your port exposed to the internet", "resolution": "Set a more restrictive cidr range", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"], "description": "Security group rule allows ingress from public internet.", "severity": "CRITICAL", "warning": false, "status": 0, "resource": "aws_security_group.sg", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "start_line": 75, "end_line": 75 } }, { "rule_id": "AVD-AWS-0107", "long_id": "aws-ec2-no-public-ingress-sgr", "rule_description": "An ingress security group rule allows traffic from /0.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Your port exposed to the internet", "resolution": "Set a more restrictive cidr range", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/no-public-ingress-sgr/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"], "description": "Security group rule allows ingress from public internet.", "severity": "CRITICAL", "warning": false, "status": 0, "resource": "aws_security_group.sg", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "start_line": 68, "end_line": 68 } }, { "rule_id": "AVD-AWS-0178", "long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs", "rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After youve created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.", "rule_provider": "aws", "rule_service": "ec2", "impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.", "resolution": "Enable flow logs for VPC", "links": ["https://aquasecurity.github.io/tfsec/v1.28.1/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"], "description": "VPC Flow Logs is not enabled for VPC ", "severity": "MEDIUM", "warning": false, "status": 0, "resource": "aws_vpc.vpc", "location": { "filename": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "start_line": 14, "end_line": 21 } }] } }]'
              checkov_report: '[{ "project": "project_4", "report": { "check_type": "terraform", "results": { "failed_checks": [{ "check_id": "CKV_AWS_126", "bc_check_id": "BC_AWS_LOGGING_26", "check_name": "Ensure that detailed monitoring is enabled for EC2 instances", "check_result": { "result": "FAILED", "evaluated_keys": ["monitoring"] }, "code_block": null, "file_path": "/main.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf", "repo_file_path": "/main.tf", "file_line_range": [1, 24], "resource": "aws_instance.webserver", "evaluations": null, "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled", "fixed_definition": null, "entity_tags": { "Name": ["webserver"] }, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf" }, { "check_id": "CKV_AWS_8", "bc_check_id": "BC_AWS_GENERAL_13", "check_name": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted", "check_result": { "result": "FAILED", "evaluated_keys": ["root_block_device"] }, "code_block": null, "file_path": "/main.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf", "repo_file_path": "/main.tf", "file_line_range": [1, 24], "resource": "aws_instance.webserver", "evaluations": null, "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption", "fixed_definition": null, "entity_tags": { "Name": ["webserver"] }, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-general-policies/general-13.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf" }, { "check_id": "CKV_AWS_79", "bc_check_id": "BC_AWS_GENERAL_31", "check_name": "Ensure Instance Metadata Service Version 1 is not enabled", "check_result": { "result": "FAILED", "evaluated_keys": ["metadata_options/[0]/http_tokens", "metadata_options/[0]/http_endpoint"] }, "code_block": null, "file_path": "/main.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf", "repo_file_path": "/main.tf", "file_line_range": [1, 24], "resource": "aws_instance.webserver", "evaluations": null, "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled", "fixed_definition": null, "entity_tags": { "Name": ["webserver"] }, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-general-policies/bc-aws-general-31.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf" }, { "check_id": "CKV_AWS_135", "bc_check_id": "BC_AWS_GENERAL_68", "check_name": "Ensure that EC2 is EBS optimized", "check_result": { "result": "FAILED", "evaluated_keys": ["ebs_optimized"] }, "code_block": null, "file_path": "/main.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf", "repo_file_path": "/main.tf", "file_line_range": [1, 24], "resource": "aws_instance.webserver", "evaluations": null, "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized", "fixed_definition": null, "entity_tags": { "Name": ["webserver"] }, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf" }, { "check_id": "CKV_AWS_88", "bc_check_id": "BC_AWS_PUBLIC_12", "check_name": "EC2 instance should not have public IP.", "check_result": { "result": "FAILED", "evaluated_keys": ["associate_public_ip_address"] }, "code_block": null, "file_path": "/main.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf", "repo_file_path": "/main.tf", "file_line_range": [1, 24], "resource": "aws_instance.webserver", "evaluations": null, "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP", "fixed_definition": null, "entity_tags": { "Name": ["webserver"] }, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/public-policies/public-12.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf" }, { "check_id": "CKV_AWS_24", "bc_check_id": "BC_AWS_NETWORKING_1", "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22", "check_result": { "result": "FAILED", "evaluated_keys": ["ingress/[0]/from_port", "ingress/[0]/to_port", "ingress/[0]/cidr_blocks", "ingress/[0]/ipv6_cidr_blocks"] }, "code_block": null, "file_path": "/setup.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "repo_file_path": "/setup.tf", "file_line_range": [59, 83], "resource": "aws_security_group.sg", "evaluations": null, "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/networking-1-port-security.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf" }, { "check_id": "CKV_AWS_23", "bc_check_id": "BC_AWS_NETWORKING_31", "check_name": "Ensure every security groups rule has a description", "check_result": { "result": "FAILED", "evaluated_keys": ["description", "egress/[0]"] }, "code_block": null, "file_path": "/setup.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "repo_file_path": "/setup.tf", "file_line_range": [59, 83], "resource": "aws_security_group.sg", "evaluations": null, "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/networking-31.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf" }, { "check_id": "CKV_AWS_260", "bc_check_id": "BC_AWS_NETWORKING_67", "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80", "check_result": { "result": "FAILED", "evaluated_keys": ["ingress/[1]/from_port", "ingress/[1]/to_port", "ingress/[1]/cidr_blocks", "ingress/[1]/ipv6_cidr_blocks"] }, "code_block": null, "file_path": "/setup.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "repo_file_path": "/setup.tf", "file_line_range": [59, 83], "resource": "aws_security_group.sg", "evaluations": null, "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80", "fixed_definition": null, "entity_tags": null, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf" }, { "check_id": "CKV2_AWS_12", "bc_check_id": "BC_AWS_NETWORKING_4", "check_name": "Ensure the default security group of every VPC restricts all traffic", "check_result": { "result": "FAILED", "entity": { "aws_vpc": { "vpc": { "__end_line__": 21, "__start_line__": 14, "cidr_block": ["10.0.0.0/16"], "enable_dns_hostnames": [true], "enable_dns_support": [true], "tags": [{ "Name": "terraform-vpc" }], "__address__": "aws_vpc.vpc" } } }, "evaluated_keys": ["egress/cidr_blocks", "ingress/self", "egress/to_port", "ingress/to_port", "resource_type", "ingress/from_port", "egress/protocol", "egress/from_port", "ingress/protocol"] }, "code_block": null, "file_path": "/setup.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "repo_file_path": "/setup.tf", "file_line_range": [14, 21], "resource": "aws_vpc.vpc", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": { "Name": "terraform-vpc" }, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-networking-policies/networking-4.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf" }, { "check_id": "CKV2_AWS_41", "bc_check_id": "BC_AWS_IAM_69", "check_name": "Ensure an IAM role is attached to EC2 instance", "check_result": { "result": "FAILED", "entity": { "aws_instance": { "webserver": { "__end_line__": 24, "__start_line__": 1, "ami": ["data.aws_ssm_parameter.webserver-ami.value"], "associate_public_ip_address": [true], "instance_type": ["t3.micro"], "key_name": ["aws_key_pair.webserver-key"], "provisioner": [{ "remote-exec": { "connection": [{ "host": ["${self.public_ip}"], "private_key": ["${file(\"~/.ssh/id_rsa\")}"], "type": ["ssh"], "user": ["ec2-user"] }], "inline": [ ["echo <h1><center>Test</center></h1> > index.html", "sudo mv index.html /var/www/html/", "sudo yum -y install httpd && sudo systemctl start httpd"] ] } }], "subnet_id": ["aws_subnet.subnet.id"], "tags": [{ "Name": ["webserver"] }], "vpc_security_group_ids": [ ["aws_security_group.sg.id"] ], "__address__": "aws_instance.webserver" } } }, "evaluated_keys": ["iam_instance_profile"] }, "code_block": null, "file_path": "/main.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf", "repo_file_path": "/main.tf", "file_line_range": [1, 24], "resource": "aws_instance.webserver", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": { "Name": "webserver" }, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/main.tf" }, { "check_id": "CKV2_AWS_11", "bc_check_id": "BC_AWS_LOGGING_9", "check_name": "Ensure VPC flow logging is enabled in all VPCs", "check_result": { "result": "FAILED", "entity": { "aws_vpc": { "vpc": { "__end_line__": 21, "__start_line__": 14, "cidr_block": ["10.0.0.0/16"], "enable_dns_hostnames": [true], "enable_dns_support": [true], "tags": [{ "Name": "terraform-vpc" }], "__address__": "aws_vpc.vpc" } } }, "evaluated_keys": ["networking", "resource_type"] }, "code_block": null, "file_path": "/setup.tf", "file_abs_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf", "repo_file_path": "/setup.tf", "file_line_range": [14, 21], "resource": "aws_vpc.vpc", "evaluations": null, "check_class": "checkov.common.graph.checks_infra.base_check", "fixed_definition": null, "entity_tags": { "Name": "terraform-vpc" }, "caller_file_path": null, "caller_file_line_range": null, "resource_address": null, "severity": null, "bc_category": null, "benchmarks": null, "description": null, "short_description": null, "vulnerability_details": null, "connected_node": null, "guideline": "https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/aws-policies/aws-logging-policies/logging-9-enable-vpc-flow-logging.html", "details": [], "check_len": null, "definition_context_file_path": "/home/noh4nsen/work/actions/poc-tf-tools/project_4/setup.tf" }] }, "summary": { "passed": 6, "failed": 11, "skipped": 0, "parsing_errors": 0, "resource_count": 7, "checkov_version": "2.4.2" } } }]'